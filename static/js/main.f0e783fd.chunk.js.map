{"version":3,"sources":["game-suonds/Wrong-answer-sound-effect.mp3","game-suonds/currect-answer.mp3","components/startButton.js","components/OptionButton.js","components/Quiz.js","App.js","index.js"],"names":["module","exports","startButton","className","OptionButton","name","id","value","setUserAnswer","getClassName","active","setActive","type","onClick","e","target","style","color","parseInt","for","Quiz","letter","PARFORM_AFFTER_STEPS","useState","onSubmit","preventDefault","map","item","App","setLetter","answer","setAnswer","userAnswer","gameStatus","setGameStatus","totalAnswer","setTotalAnswer","currectAnswer","setCurrectAnswer","wrongAnswer","setWrongAnswer","quizArray","PICK_A_Letter","randomNumber","Math","floor","random","length","PLAY_SOUND","Audio","loseSound","play","winSound","updateStatus","setTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0e783fd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Wrong-answer-sound-effect.093eed4f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/currect-answer.d0c5f222.mp3\";","import React from 'react'\r\nimport {BsFillPlayFill} from 'react-icons/bs'\r\nfunction startButton() {\r\n  return (\r\n    <div className='start-button'>\r\n          <p>Welcome to small quiz game</p>\r\n          <button>\r\n                    <BsFillPlayFill/>\r\n                    Start Playing Now\r\n          </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default startButton","import React,{useState} from 'react'\r\n\r\nfunction OptionButton({name,id,value,setUserAnswer,getClassName,active,setActive}) {\r\n  return (\r\n   <>\r\n    <input type='radio' name='answer' id={id} value={value} onClick={(e)=>{ \r\n      setUserAnswer(e.target.value)\r\n      setActive(e.target.value)\r\n    }} />\r\n  <label style={{color: value === parseInt(active) && \"white\"}} for={id} className={value === parseInt(active) ? `option ${getClassName()}` : \"option\"}>{name}</label>\r\n   </>\r\n  )\r\n}\r\n\r\nexport default OptionButton","import React from 'react'\r\nimport { useState } from 'react'\r\nimport OptionButton from './OptionButton'\r\n\r\nfunction Quiz({letter,setUserAnswer,PARFORM_AFFTER_STEPS,getClassName}) {\r\n  const [active, setActive] = useState()\r\n  const options = [\r\n    {\r\n      name: \"Root Leeter\",\r\n      id: \"root-letter\",\r\n      value: 0,\r\n    },\r\n    {\r\n      name: \"Sky Letter\",\r\n      id: \"sky-letter\",\r\n      value: 1\r\n    },\r\n    {\r\n      name: \"Grass Letter\",\r\n      id: \"grass-letter\",\r\n      value: 2\r\n    }\r\n  ]\r\n  return (\r\n          <div className='quiz'>\r\n          <h3 className='quiz-text'>\r\n            Letter \"{letter}\" Is Blong To... \r\n          </h3>\r\n          <div>\r\n            <form onSubmit={(e)=> e.preventDefault()}>\r\n              {\r\n                options.map((item)=>{\r\n                  return(\r\n                    <OptionButton name={item.name} id={item.id} value={item.value} setUserAnswer={setUserAnswer} getClassName={getClassName} active={active} setActive={setActive}/>\r\n                  )\r\n                })\r\n              }\r\n             <button className=\"check-button\" onClick={()=> {\r\n              PARFORM_AFFTER_STEPS()\r\n              setActive()\r\n            }}>Check</button>\r\n              \r\n            </form>\r\n            \r\n            \r\n          </div>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default Quiz","import React, { useState } from 'react';\r\nimport StartButton from './components/startButton';\r\nimport loseSound from './game-suonds/Wrong-answer-sound-effect.mp3'\r\nimport winSound from './game-suonds/currect-answer.mp3'\r\nimport Quiz from './components/Quiz'\r\nfunction App() {\r\n  const [letter, setLetter] = useState()\r\n  const [answer, setAnswer] = useState()\r\n  const [userAnswer, setUserAnswer] = useState()\r\n  const [gameStatus, setGameStatus] = useState(\"\")\r\n  const [totalAnswer, setTotalAnswer] = useState(0)\r\n  const [currectAnswer, setCurrectAnswer] = useState(0)\r\n  const [wrongAnswer, setWrongAnswer] = useState(0)\r\n  const quizArray = [ \r\n    ['j','g','p','q','y'],\r\n    ['b','d','f','h','l','k','t'],\r\n    ['a','c','e','i','m','n','o','r','s','u','v','w','x','z']\r\n  ]; // ends quiz array\r\n \r\n  const PICK_A_Letter = ()=>{\r\n    const randomNumber = Math.floor(Math.random() * 3)\r\n    setLetter(quizArray[randomNumber][Math.floor(Math.random() * quizArray[randomNumber].length)])\r\n    setAnswer(randomNumber)\r\n  } // ends pick a letter method\r\n  const checkAnswer = ()=>{\r\n    parseInt(userAnswer) === answer ? setGameStatus(\"win\") : setGameStatus(\"lose\")\r\n\r\n  } // ends check answer function\r\n  const PARFORM_AFFTER_STEPS = ()=>{\r\n    checkAnswer()\r\n    updateStatus()\r\n    PLAY_SOUND()\r\n    setTimeout(()=>{\r\n      setGameStatus(\"playing\")\r\n    },2000)\r\n    PICK_A_Letter()\r\n  } // ENDS PARFORM AFFTER STEPS FUNCTION\r\n  function getClassName(){\r\n   if(gameStatus === \"\" || gameStatus === \"playing\"){ return \"default\"}\r\n   else if(gameStatus === \"lose\"){ return \"wrong\"}\r\n   else{ return \"right\"}\r\n\r\n  } // ends getclassname function \r\n  const PLAY_SOUND = ()=>{\r\n    parseInt(userAnswer) !== answer ? new Audio(loseSound).play() : new Audio(winSound).play() \r\n  } // ENDS PLAYSOUND FUNCTION\r\n  const updateStatus = ()=>{\r\n    if(parseInt(userAnswer) == answer){\r\n      setTotalAnswer(totalAnswer+1)\r\n      setCurrectAnswer(currectAnswer+1)\r\n    } else if(parseInt(userAnswer) != answer){\r\n      setTotalAnswer(totalAnswer+1)\r\n      setWrongAnswer(wrongAnswer+1)\r\n    }\r\n  } // ends updatestatus function\r\n \r\n \r\n  return (\r\n    <main className={getClassName()}>\r\n      <div className='container'>\r\n        <div className='status-div'>\r\n        <h3>Status</h3>\r\n        <table>\r\n          <tr>\r\n            <td>Total Answers</td>\r\n            <td>{totalAnswer}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Currect Answers</td>\r\n            <td>{currectAnswer}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Wrong Answers</td>\r\n            <td>{wrongAnswer}</td>\r\n          </tr>\r\n        </table>\r\n        </div>\r\n        <section className='info'>\r\n          <h3>Let's test your self</h3>\r\n          <div className={`line ${getClassName()}`}></div>\r\n          {gameStatus === \"\" ? <span onClick={()=>{\r\n            setGameStatus(\"playing\")\r\n            PICK_A_Letter()\r\n          }}><StartButton/></span> : <Quiz letter={letter} setUserAnswer={setUserAnswer} PARFORM_AFFTER_STEPS={PARFORM_AFFTER_STEPS} getClassName={getClassName}/>}\r\n        </section>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}